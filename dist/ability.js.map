{"version":3,"file":"ability.js","sources":["../src/ability.ts"],"sourcesContent":["import EmberObject from '@ember/object';\nimport { camelize } from '@ember/string';\nimport { get } from '@ember/object';\n\nexport default class EmberObjectAbility extends EmberObject {\n  /**\n   * Parse propertyName into ability property\n   * eg: `createProject` will be parsed to `canCreateProject` using default definition\n   * @public\n   * @param  {[String]} propertyName [description]\n   * @return {[String]}              [description]\n   */\n  parseProperty(propertyName: string): string {\n    return camelize(`can-${propertyName}`);\n  }\n\n  /**\n   * Get parsed ability value based on propertyName\n   * eg: `createProject` will return a value for `canCreateProject`\n   * using default `parseProperty` definition\n   * @param  {String} propertyName property name, eg. `createProject`\n   * @param  {any} model\n   * @param  {Object} properties\n   * @return {*}                   value of parsed `propertyName` property\n   */\n  getAbility(\n    propertyName: string,\n    model?: unknown,\n    properties?: Record<string, unknown>,\n  ): unknown {\n    const abilityValue = get(this, this.parseProperty(propertyName));\n\n    if (typeof abilityValue === 'function') {\n      return abilityValue.call(this, model, properties);\n    }\n\n    return abilityValue;\n  }\n}\n"],"names":["EmberObjectAbility","EmberObject","parseProperty","propertyName","camelize","getAbility","model","properties","abilityValue","get","call"],"mappings":";;;AAIe,MAAMA,kBAAkB,SAASC,WAAW,CAAC;AAC1D;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,aAAaA,CAACC,YAAoB,EAAU;AAC1C,IAAA,OAAOC,QAAQ,CAAC,CAAOD,IAAAA,EAAAA,YAAY,EAAE,CAAC;AACxC;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEE,EAAAA,UAAUA,CACRF,YAAoB,EACpBG,KAAe,EACfC,UAAoC,EAC3B;AACT,IAAA,MAAMC,YAAY,GAAGC,GAAG,CAAC,IAAI,EAAE,IAAI,CAACP,aAAa,CAACC,YAAY,CAAC,CAAC;AAEhE,IAAA,IAAI,OAAOK,YAAY,KAAK,UAAU,EAAE;MACtC,OAAOA,YAAY,CAACE,IAAI,CAAC,IAAI,EAAEJ,KAAK,EAAEC,UAAU,CAAC;AACnD;AAEA,IAAA,OAAOC,YAAY;AACrB;AACF;;;;"}